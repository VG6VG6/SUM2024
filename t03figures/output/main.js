"use strict";class t{constructor(t,i,s){null==t?(this.x=0,this.x,this.z=0):"object"==typeof t?3==t.lenght?(this.x=t[0],this.y=t[1],this.z=t[2]):(this.x=t.x,this.y=t.y,this.z=t.z):null==i&&null==s?(this.x=t,this.y=t,this.z=t):null==s?(this.x=t,this.y=i,this.z=0):(this.x=t,this.y=i,this.z=s)}dot(t){return null==t?this:this.x*t.x+this.y*t.y+this.z*t.z}add(t){return null==t?this:"number"==typeof t?i(this.x+t,this.y+t,this.z+t):i(this.x+t.x,this.y+t.y,this.z+t.z)}sub(t){return null==t?this:"number"==typeof t?i(this.x-t,this.y-t,this.z-t):i(this.x-t.x,this.y-t.y,this.z-t.z)}mul(t){return null==t?this:"number"==typeof t?i(this.x*t,this.y*t,this.z*t):i(this.x*t.x,this.y*t.y,this.z*t.z)}div(t){return null==t?this:"number"==typeof t?i(this.x/t,this.y/t,this.z/t):i(this.x*t.x,this.y*t.y,this.z*t.z)}len(){let t=this.dot(this);return 1==t||0==t?t:Math.sqrt(t)}normalize(){let t=this.dot(this);return 1==t||0==t?this:this.div(t)}cross(t){return null==t?this:i(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}}function i(...i){return new t(...i)}class s{constructor(t=null){null==t||null==t?this.m=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]:"object"==typeof t&&4==t.length?this.m=t:this.m=t.m}translate(t){"number"==typeof t&&(this.m=m([[1,0,0,0],[0,1,0,0],[0,0,1,0],[t.x,t.y,t.z,1]]))}mul(t){let i=m();return i.m[0][0]=this.m[0][0]*t.m[0][0]+this.m[0][1]*t.m[1][0]+this.m[0][2]*t.m[2][0]+this.m[0][3]*t.m[3][0],i.m[0][1]=this.m[0][0]*t.m[0][1]+this.m[0][1]*t.m[1][1]+this.m[0][2]*t.m[2][1]+this.m[0][3]*t.m[3][1],i.m[0][2]=this.m[0][0]*t.m[0][2]+this.m[0][1]*t.m[1][2]+this.m[0][2]*t.m[2][2]+this.m[0][3]*t.m[3][2],i.m[0][3]=this.m[0][0]*t.m[0][3]+this.m[0][1]*t.m[1][3]+this.m[0][2]*t.m[2][3]+this.m[0][3]*t.m[3][3],i.m[1][0]=this.m[1][0]*t.m[0][0]+this.m[1][1]*t.m[1][0]+this.m[1][2]*t.m[2][0]+this.m[1][3]*t.m[3][0],i.m[1][1]=this.m[1][0]*t.m[0][1]+this.m[1][1]*t.m[1][1]+this.m[1][2]*t.m[2][1]+this.m[1][3]*t.m[3][1],i.m[1][2]=this.m[1][0]*t.m[0][2]+this.m[1][1]*t.m[1][2]+this.m[1][2]*t.m[2][2]+this.m[1][3]*t.m[3][2],i.m[1][3]=this.m[1][0]*t.m[0][3]+this.m[1][1]*t.m[1][3]+this.m[1][2]*t.m[2][3]+this.m[1][3]*t.m[3][3],i.m[2][0]=this.m[2][0]*t.m[0][0]+this.m[2][1]*t.m[1][0]+this.m[2][2]*t.m[2][0]+this.m[2][3]*t.m[3][0],i.m[2][1]=this.m[2][0]*t.m[0][1]+this.m[2][1]*t.m[1][1]+this.m[2][2]*t.m[2][1]+this.m[2][3]*t.m[3][1],i.m[2][2]=this.m[2][0]*t.m[0][2]+this.m[2][1]*t.m[1][2]+this.m[2][2]*t.m[2][2]+this.m[2][3]*t.m[3][2],i.m[2][3]=this.m[2][0]*t.m[0][3]+this.m[2][1]*t.m[1][3]+this.m[2][2]*t.m[2][3]+this.m[2][3]*t.m[3][3],i.m[3][0]=this.m[3][0]*t.m[0][0]+this.m[3][1]*t.m[1][0]+this.m[3][2]*t.m[2][0]+this.m[3][3]*t.m[3][0],i.m[3][1]=this.m[3][0]*t.m[0][1]+this.m[3][1]*t.m[1][1]+this.m[3][2]*t.m[2][1]+this.m[3][3]*t.m[3][1],i.m[3][2]=this.m[3][0]*t.m[0][2]+this.m[3][1]*t.m[1][2]+this.m[3][2]*t.m[2][2]+this.m[3][3]*t.m[3][2],i.m[3][3]=this.m[3][0]*t.m[0][3]+this.m[3][1]*t.m[1][3]+this.m[3][2]*t.m[2][3]+this.m[3][3]*t.m[3][3],i}determ(){return+this.m[0][0]*h(this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])+-this.m[0][1]*h(this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])+ +this.m[0][2]*h(this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])+-this.m[0][3]*h(this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])}inverse(){r=m();let t=this.determ();return 0==t?m():(r.A[0][0]=+h(this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])/t,r.A[1][0]=-h(this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])/t,r.A[2][0]=+h(this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])/t,r.A[3][0]=-h(this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])/t,r.A[0][1]=-h(this.m[0][1],this.m[0][2],this.m[0][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])/t,r.A[1][1]=+h(this.m[0][0],this.m[0][2],this.m[0][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])/t,r.A[2][1]=-h(this.m[0][0],this.m[0][1],this.m[0][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])/t,r.A[3][1]=+h(this.m[0][0],this.m[0][1],this.m[0][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])/t,r.A[0][2]=+h(this.m[0][1],this.m[0][2],this.m[0][3],this.m[1][1],this.m[1][2],this.m[1][3],this.m[3][1],this.m[3][2],this.m[3][3])/t,r.A[1][2]=-h(this.m[0][0],this.m[0][2],this.m[0][3],this.m[1][0],this.m[1][2],this.m[1][3],this.m[3][0],this.m[3][2],this.m[3][3])/t,r.A[2][2]=+h(this.m[0][0],this.m[0][1],this.m[0][3],this.m[1][0],this.m[1][1],this.m[1][3],this.m[3][0],this.m[3][1],this.m[3][3])/t,r.A[3][2]=-h(this.m[0][0],this.m[0][1],this.m[0][2],this.m[1][0],this.m[1][1],this.m[1][2],this.m[3][0],this.m[3][1],this.m[3][2])/t,r.A[0][3]=-h(this.m[0][1],this.m[0][2],this.m[0][3],this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3])/t,r.A[1][3]=+h(this.m[0][0],this.m[0][2],this.m[0][3],this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3])/t,r.A[2][3]=-h(this.m[0][0],this.m[0][1],this.m[0][3],this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3])/t,r.A[3][3]=+h(this.m[0][0],this.m[0][1],this.m[0][2],this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2])/t,r)}transponse(){return m(this.m[0][0],this.m[1][0],this.m[2][0],this.m[3][0],this.m[0][1],this.m[1][1],this.m[2][1],this.m[3][1],this.m[0][2],this.m[1][2],this.m[2][2],this.m[3][2],this.m[0][3],this.m[1][3],this.m[2][3],this.m[3][3])}}function h(t,i,s,h,m,e,r,n,a){return t*m*a+i*e*r+s*h*n-t*e*n-i*h*a-s*m*r}function m(...t){return new s(...t)}class e{Loc=i();At=i();Dir=i();Right=i();Up=i();matrView=m();MatrProj=m();MatrVP=m();FrameW=0;FrameH=0;Wp=0;Hp=0;ProjSize=0;ProjDist=0;ProjFarClip=0;set(t,s,h){return this.matrView=function(t,i,s){let h=i.sub(t).normalize(),e=h.cross(s).normalize(),r=e.cross(h).normalize();return m([[e.x,r.x,-h.x,0],[e.y,r.y,-h.y,0],[e.z,r.z,-h.z,0],[-t.dot(e),-t.dot(r),t.dot(h),1]])}(t,s,h),this.Right=i(this.matrView.m[0][0],this.matrView.m[1][0],this.matrView.m[2][0]),this.Up=i(this.matrView.m[0][1],this.matrView.m[1][1],this.matrView.m[2][1]),this.Dir=i(-this.matrView.m[0][2],-this.matrView.m[1][2],-this.matrView.m[2][2]),this.Loc=t,this.At=s,this.MatrVP=this.matrView.mul(this.MatrProj),this}setProj(t,i,s){let h,e;var r,n,a,l,o,d;this.ProjDist=i,this.ProjFarClip=s,h=e=this.ProjSize=t,this.FrameW>=this.FrameH?h*=this.FrameW/this.FrameH:e*=this.FrameH/this.FrameW,this.Wp=h,this.Hp=e,this.MatrProj=(r=-h/2,n=h/2,a=-e/2,l=e/2,o=this.ProjDist,d=this.ProjFarClip,m([[2*o/(n-r),0,0,0],[0,2*o/(l-a),0,0],[(n+r)/(n-r),(l+a)/(l-a),-(d+o)/(d-o),-1],[0,0,-2*o*d/(d-o),0]])),this.MatrVP=this.matrView.mul(this.MatrProj)}setSize(t,i){this.FrameW=t,this.FrameH=i,this.setProj(this.ProjSize,this.ProjDist,this.ProjFarClip)}}let n;class a{pos=i();n=i()}function l(...t){return new a(...t)}class o{type;VA;Vbuf;IBuf;NumOfElements;minBB=i();maxBB=i();trans=m();constructor(t,i,s,h,m){this.VA=0,this.Vbuf=0,this.IBuf=0,this.NumOfElements=0,this.VA=0;let e=[],r=0;for(let i of t)e[r++]=i.pos.x,e[r++]=i.pos.y,e[r++]=i.pos.z,e[r++]=i.n.x,e[r++]=i.n.y,e[r++]=i.n.z;const a=n.gl.getAttribLocation(n.shd.id,"InPosition"),l=n.gl.getAttribLocation(n.shd.id,"InNormal");this.vertexArray=n.gl.createVertexArray(),n.gl.bindVertexArray(this.vertexArray),this.vertexBufer=n.gl.createBuffer(),n.gl.bindBuffer(n.gl.ARRAY_BUFFER,this.vertexBufer),n.gl.bufferData(n.gl.ARRAY_BUFFER,new Float32Array(e),n.gl.STATIC_DRAW),-1!=a&&(n.gl.vertexAttribPointer(a,3,n.gl.FLOAT,!1,24,0),n.gl.enableVertexAttribArray(a)),-1!=l&&(n.gl.vertexAttribPointer(l,3,n.gl.FLOAT,!1,24,12),n.gl.enableVertexAttribArray(l)),this.indexArray=n.gl.createBuffer(),n.gl.bindBuffer(n.gl.ELEMENT_ARRAY_BUFFER,this.indexArray),n.gl.bufferData(n.gl.ELEMENT_ARRAY_BUFFER,4*h,n.gl.STATIC_DRAW),this.NumOfElements=h,this.type=m}draw(t){null==t&&(t=m()),this.world=this.trans.mul(t),this.wvp=this.world.mul(n.camera.MatrVP),n.gl.bindVertexArray(this.vertexArray),n.gl.bindBuffer(n.gl.ELEMENT_ARRAY_BUFFER,this.indexArray),n.worldLoc=n.gl.getUniformLocation(n.shd.id,"WVP"),-1!=n.worldLoc&&n.gl.uniformMatrix4fv(n.worldLoc,!1,new Float32Array(this.wvp.m)),n.gl.drawArrays(n.gl.TRIANGLE_STRIP,0,this.NumOfElements)}}let d,g,u,c,f,A,y,p,x=0,z=0,w=0,P=!1;function E(t){g=t,g.canvas.addEventListener("mousedown",(t=>{c=t.clientX,f=t.clientY,P=!0})),g.canvas.addEventListener("mousemove",(t=>{!function(t){let i=t.clientX,s=t.clientY;P&&(x-=i-c,w+=s-f,f=s,c=i)}(t)})),g.canvas.addEventListener("mouseup",(()=>{P=!1})),g.canvas.addEventListener("mouseout",(()=>{P=!1})),g.canvas.addEventListener("mousewheel",(t=>{z+=t.wheelDelta/4e4}));let s=[],h=[];s[0]=l(),s[1]=l(),s[2]=l(),s[3]=l(),s[0].pos=i(-1,1,0),s[1].pos=i(-1,-1,0),s[2].pos=i(1,1,0),s[3].pos=i(1,-1,0),s[0].n=i(0,0,1),s[1].n=i(0,0,1),s[2].n=i(0,0,1),s[3].n=i(0,0,1),h[0]=0,h[1]=0,h[2]=0,h[3]=0,A=function(...t){return new o(...t)}(s,4,h,4,g.gl.TRIANGLE_STRIP)}console.log("Done.");class v{async _init(t){this.name=t,this.id=null,this.shaders=[{id:null,type:y.gl.VERTEX_SHADER,name:"vert",src:""},{id:null,type:y.gl.FRAGMENT_SHADER,name:"frag",src:""}];for(const i of this.shaders){let s=await fetch(`bin/shaders/${t}/${i.name}.glsl`),h=await s.text();"string"==typeof h&&""!=h&&(i.src=h)}this.updateShadersSource()}updateShadersSource(){if(this.shaders[0].id=null,this.shaders[1].id=null,this.id=null,""!=this.shaders[0].src&&""!=this.shaders[1].src){if(this.shaders.forEach((t=>{if(t.id=y.gl.createShader(t.type),y.gl.shaderSource(t.id,t.src),y.gl.compileShader(t.id),!y.gl.getShaderParameter(t.id,y.gl.COMPILE_STATUS)){let i=y.gl.getShaderInfoLog(t.id);console.log(`Shader ${this.name}/${t.name} compile fail: ${i}`)}})),this.id=y.gl.createProgram(),this.shaders.forEach((t=>{null!=t.id&&y.gl.attachShader(this.id,t.id)})),y.gl.linkProgram(this.id),!y.gl.getProgramParameter(this.id,y.gl.LINK_STATUS)){let t=y.gl.getProgramInfoLog(this.id);console.log(`Shader program ${this.name} link fail: ${t}`)}this.updateShaderData()}}updateShaderData(){this.attrs={};const t=y.gl.getProgramParameter(this.id,y.gl.ACTIVE_ATTRIBUTES);for(let i=0;i<t;i++){const t=y.gl.getActiveAttrib(this.id,i);this.attrs[t.name]={name:t.name,type:t.type,size:t.size,loc:y.gl.getAttribLocation(this.id,t.name)}}this.uniforms={};const i=y.gl.getProgramParameter(this.id,y.gl.ACTIVE_UNIFORMS);for(let t=0;t<i;t++){const i=y.gl.getActiveUniform(this.id,t);this.uniforms[i.name]={name:i.name,type:i.type,size:i.size,loc:y.gl.getUniformLocation(this.id,i.name)}}this.uniformBlocks={};const s=y.gl.getProgramParameter(this.id,y.gl.ACTIVE_UNIFORM_BLOCKS);for(let t=0;t<s;t++){const i=y.gl.getActiveUniformBlockName(this.id,t),s=y.gl.getActiveUniformBlockIndex(this.id,i);this.uniformBlocks[i]={name:i,index:s,size:y.gl.getActiveUniformBlockParameter(this.id,s,y.gl.UNIFORM_BLOCK_DATA_SIZE),bind:y.gl.getActiveUniformBlockParameter(this.id,s,y.gl.UNIFORM_BLOCK_BINDING)}}}constructor(t){this._init(t)}apply(){null!=this.id&&y.gl.useProgram(this.id)}}function F(t,i){return y=i,new v(t)}class L{gl;shd;prg;canvas;camera;worldLoc}function R(){let t=new L;if(t.canvas=document.querySelector("#glCanvas"),t.gl=t.canvas.getContext("webgl2"),null==t.gl)return void alert("WebGL2 not supported");t.gl.clearColor(.3,.47,.8,1),t.gl.clear(t.gl.COLOR_BUFFER_BIT),t.shd=F("def",t),p=!1,t.camera=function(...t){return new e(...t)}(),t.camera.setSize(600,600),t.camera.setProj(.1,.1,300),t.camera.set(i(0,10,10),i(0),i(0,1,0));const s=()=>{t.gl.clearColor(1,0,0,1),p?function(t){if(t.gl.clear(t.gl.COLOR_BUFFER_BIT),d=t.gl.getUniformLocation(t.shd.id,"Time"),u=t.gl.getUniformLocation(t.shd.id,"Mouse"),-1!=d){const i=new Date;let s=60*i.getMinutes()+i.getSeconds()+i.getMilliseconds()/1e3;t.gl.uniform1f(d,s)}-1!=u&&t.gl.uniform3f(u,x,w,z),A.draw()}(t):null!=t.shd.id&&(!function(t){n=t,n.id=n.shd.id}(t),E(t),t.shd.updateShaderData(),t.prg=t.shd.id,p=!0),window.requestAnimationFrame(s)};s()}window.addEventListener("load",(()=>{R()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
