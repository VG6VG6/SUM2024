"use strict";class t{constructor(t,s,i){null==t?(this.x=0,this.x,this.z=0):"object"==typeof t?3==t.lenght?(this.x=t[0],this.y=t[1],this.z=t[2]):(this.x=t.x,this.y=t.y,this.z=t.z):null==s&&null==i?(this.x=t,this.y=t,this.z=t):null==i?(this.x=t,this.y=s,this.z=0):(this.x=t,this.y=s,this.z=i)}dot(t){return null==t?this:this.x*t.x+this.y*t.y+this.z*t.z}add(t){return null==t?this:"number"==typeof t?s(this.x+t,this.y+t,this.z+t):s(this.x+t.x,this.y+t.y,this.z+t.z)}sub(t){return null==t?this:"number"==typeof t?s(this.x-t,this.y-t,this.z-t):s(this.x-t.x,this.y-t.y,this.z-t.z)}mul(t){return null==t?this:"number"==typeof t?s(this.x*t,this.y*t,this.z*t):s(this.x*t.x,this.y*t.y,this.z*t.z)}div(t){return null==t?this:"number"==typeof t?s(this.x/t,this.y/t,this.z/t):s(this.x*t.x,this.y*t.y,this.z*t.z)}transform(t){return null==t?this:s((this.x,t.m[0][0],this.y,t.m[1][0],this.z,t.m[2][0],t.m[3][0],this.x,t.m[0][1],this.y,t.m[1][1],this.z,t.m[2][1],t.m[3][1],this.x*t.m[0][2]+this.y*t.m[1][2]+this.z*t.m[2][2]+t.m[3][2]))}len(){let t=this.dot(this);return 1==t||0==t?t:Math.sqrt(t)}normalize(){let t=this.len();return 1==t||0==t?this:this.div(t)}cross(t){return null==t?this:s(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}}function s(...s){return new t(...s)}function i(t){return t*Math.PI/180}class h{constructor(t=null){null==t||null==t?this.m=[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]]:"object"==typeof t&&4==t.length?this.m=t:this.m=t.m}mul(t){let s=m();return s.m[0][0]=this.m[0][0]*t.m[0][0]+this.m[0][1]*t.m[1][0]+this.m[0][2]*t.m[2][0]+this.m[0][3]*t.m[3][0],s.m[0][1]=this.m[0][0]*t.m[0][1]+this.m[0][1]*t.m[1][1]+this.m[0][2]*t.m[2][1]+this.m[0][3]*t.m[3][1],s.m[0][2]=this.m[0][0]*t.m[0][2]+this.m[0][1]*t.m[1][2]+this.m[0][2]*t.m[2][2]+this.m[0][3]*t.m[3][2],s.m[0][3]=this.m[0][0]*t.m[0][3]+this.m[0][1]*t.m[1][3]+this.m[0][2]*t.m[2][3]+this.m[0][3]*t.m[3][3],s.m[1][0]=this.m[1][0]*t.m[0][0]+this.m[1][1]*t.m[1][0]+this.m[1][2]*t.m[2][0]+this.m[1][3]*t.m[3][0],s.m[1][1]=this.m[1][0]*t.m[0][1]+this.m[1][1]*t.m[1][1]+this.m[1][2]*t.m[2][1]+this.m[1][3]*t.m[3][1],s.m[1][2]=this.m[1][0]*t.m[0][2]+this.m[1][1]*t.m[1][2]+this.m[1][2]*t.m[2][2]+this.m[1][3]*t.m[3][2],s.m[1][3]=this.m[1][0]*t.m[0][3]+this.m[1][1]*t.m[1][3]+this.m[1][2]*t.m[2][3]+this.m[1][3]*t.m[3][3],s.m[2][0]=this.m[2][0]*t.m[0][0]+this.m[2][1]*t.m[1][0]+this.m[2][2]*t.m[2][0]+this.m[2][3]*t.m[3][0],s.m[2][1]=this.m[2][0]*t.m[0][1]+this.m[2][1]*t.m[1][1]+this.m[2][2]*t.m[2][1]+this.m[2][3]*t.m[3][1],s.m[2][2]=this.m[2][0]*t.m[0][2]+this.m[2][1]*t.m[1][2]+this.m[2][2]*t.m[2][2]+this.m[2][3]*t.m[3][2],s.m[2][3]=this.m[2][0]*t.m[0][3]+this.m[2][1]*t.m[1][3]+this.m[2][2]*t.m[2][3]+this.m[2][3]*t.m[3][3],s.m[3][0]=this.m[3][0]*t.m[0][0]+this.m[3][1]*t.m[1][0]+this.m[3][2]*t.m[2][0]+this.m[3][3]*t.m[3][0],s.m[3][1]=this.m[3][0]*t.m[0][1]+this.m[3][1]*t.m[1][1]+this.m[3][2]*t.m[2][1]+this.m[3][3]*t.m[3][1],s.m[3][2]=this.m[3][0]*t.m[0][2]+this.m[3][1]*t.m[1][2]+this.m[3][2]*t.m[2][2]+this.m[3][3]*t.m[3][2],s.m[3][3]=this.m[3][0]*t.m[0][3]+this.m[3][1]*t.m[1][3]+this.m[3][2]*t.m[2][3]+this.m[3][3]*t.m[3][3],s}determ(){return+this.m[0][0]*matrDeterm3x3(this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])+-this.m[0][1]*matrDeterm3x3(this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])+ +this.m[0][2]*matrDeterm3x3(this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])+-this.m[0][3]*matrDeterm3x3(this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])}inverse(){r=m();let t=this.determ();return 0==t?m():(r.A[0][0]=+matrDeterm3x3(this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])/t,r.A[1][0]=-matrDeterm3x3(this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])/t,r.A[2][0]=+matrDeterm3x3(this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])/t,r.A[3][0]=-matrDeterm3x3(this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])/t,r.A[0][1]=-matrDeterm3x3(this.m[0][1],this.m[0][2],this.m[0][3],this.m[2][1],this.m[2][2],this.m[2][3],this.m[3][1],this.m[3][2],this.m[3][3])/t,r.A[1][1]=+matrDeterm3x3(this.m[0][0],this.m[0][2],this.m[0][3],this.m[2][0],this.m[2][2],this.m[2][3],this.m[3][0],this.m[3][2],this.m[3][3])/t,r.A[2][1]=-matrDeterm3x3(this.m[0][0],this.m[0][1],this.m[0][3],this.m[2][0],this.m[2][1],this.m[2][3],this.m[3][0],this.m[3][1],this.m[3][3])/t,r.A[3][1]=+matrDeterm3x3(this.m[0][0],this.m[0][1],this.m[0][2],this.m[2][0],this.m[2][1],this.m[2][2],this.m[3][0],this.m[3][1],this.m[3][2])/t,r.A[0][2]=+matrDeterm3x3(this.m[0][1],this.m[0][2],this.m[0][3],this.m[1][1],this.m[1][2],this.m[1][3],this.m[3][1],this.m[3][2],this.m[3][3])/t,r.A[1][2]=-matrDeterm3x3(this.m[0][0],this.m[0][2],this.m[0][3],this.m[1][0],this.m[1][2],this.m[1][3],this.m[3][0],this.m[3][2],this.m[3][3])/t,r.A[2][2]=+matrDeterm3x3(this.m[0][0],this.m[0][1],this.m[0][3],this.m[1][0],this.m[1][1],this.m[1][3],this.m[3][0],this.m[3][1],this.m[3][3])/t,r.A[3][2]=-matrDeterm3x3(this.m[0][0],this.m[0][1],this.m[0][2],this.m[1][0],this.m[1][1],this.m[1][2],this.m[3][0],this.m[3][1],this.m[3][2])/t,r.A[0][3]=-matrDeterm3x3(this.m[0][1],this.m[0][2],this.m[0][3],this.m[1][1],this.m[1][2],this.m[1][3],this.m[2][1],this.m[2][2],this.m[2][3])/t,r.A[1][3]=+matrDeterm3x3(this.m[0][0],this.m[0][2],this.m[0][3],this.m[1][0],this.m[1][2],this.m[1][3],this.m[2][0],this.m[2][2],this.m[2][3])/t,r.A[2][3]=-matrDeterm3x3(this.m[0][0],this.m[0][1],this.m[0][3],this.m[1][0],this.m[1][1],this.m[1][3],this.m[2][0],this.m[2][1],this.m[2][3])/t,r.A[3][3]=+matrDeterm3x3(this.m[0][0],this.m[0][1],this.m[0][2],this.m[1][0],this.m[1][1],this.m[1][2],this.m[2][0],this.m[2][1],this.m[2][2])/t,r)}transponse(){return m(this.m[0][0],this.m[1][0],this.m[2][0],this.m[3][0],this.m[0][1],this.m[1][1],this.m[2][1],this.m[3][1],this.m[0][2],this.m[1][2],this.m[2][2],this.m[3][2],this.m[0][3],this.m[1][3],this.m[2][3],this.m[3][3])}static matrDeterm3x3(t,s,i,h,m,r,e,a,o){return t*m*o+s*r*e+i*h*a-t*r*a-s*h*o-i*m*e}static matrRotate(t,s){let h=i(t),r=Math.sin(h),e=Math.cos(h);return m([[e+s.x*s.x*(1-e),s.y*s.x*(1-e)-s.z*r,s.z*s.x*(1-e)+s.y*r,0],[s.x*s.y*(1-e)+s.z*r,e+s.y*s.y*(1-e),s.z*s.y*(1-e)-s.x*r,0],[s.x*s.z*(1-e)-s.y*r,s.y*s.z*(1-e)+s.x*r,e+s.z*s.z*(1-e),0],[0,0,0,1]])}static matrRotateX(t){let s=i(t),h=Math.sin(s),r=Math.cos(s);return m([[1,0,0,0],[0,r,h,0],[0,-h,r,0],[0,0,0,1]])}static matrRotateY(t){let s=i(t),h=Math.sin(s),r=Math.cos(s);return m([[r,0,-h,0],[0,1,0,0],[h,0,r,0],[0,0,0,1]])}static matrRotateZ(t){let s=i(t),h=Math.sin(s),r=Math.cos(s);return m([[r,h,0,0],[-h,r,0,0],[0,0,1,0],[0,0,0,1]])}static scale(t){return m([[t.x,0,0,0],[0,t.y,0,0],[0,0,t.z,0],[0,0,0,1]])}static matrOrtho(t,s,i,h,r,e){return m([[2/(s-t),0,0,0],[0,2/(h-i),0,0],[0,0,-2/(e-r),0],[-(s+t)/(s-t),-(h+i)/(h-i),-(e+r)/(e-r),1]])}static matrFrustum(t,s,i,h,r,e){return m([[2*r/(s-t),0,0,0],[0,2*r/(h-i),0,0],[(s+t)/(s-t),(h+i)/(h-i),-(e+r)/(e-r),-1],[0,0,-2*r*e/(e-r),0]])}static matrView(t,s,i){let h=s.sub(t).normalize(),r=h.cross(i).normalize(),e=r.cross(h).normalize();return m([[r.x,e.x,-h.x,0],[r.y,e.y,-h.y,0],[r.z,e.z,-h.z,0],[-t.dot(r),-t.dot(e),t.dot(h),1]])}static matrTranslate(t){return m([[1,0,0,0],[0,1,0,0],[0,0,1,0],[t.x,t.y,t.z,1]])}}function m(...t){return new h(...t)}m.matrView=(...t)=>h.matrView(...t),m.matrTranslate=(...t)=>h.matrTranslate(...t),m.matrFrustum=(...t)=>h.matrFrustum(...t),m.matrRotateY=(...t)=>h.matrRotateY(...t),m.matrRotate=(...t)=>h.matrRotate(...t),m.matrRotateX=(...t)=>h.matrRotateX(...t),m.matrRotateZ=(...t)=>h.matrRotateZ(...t);class e{Loc=s();At=s();Dir=s();Right=s();Up=s();matrView=m();MatrProj=m();MatrVP=m();FrameW=0;FrameH=0;Wp=0;Hp=0;ProjSize=0;ProjDist=0;ProjFarClip=0;set(t,i,h){return this.matrView=m.matrView(t,i,h),this.Right=s(this.matrView.m[0][0],this.matrView.m[1][0],this.matrView.m[2][0]),this.Up=s(this.matrView.m[0][1],this.matrView.m[1][1],this.matrView.m[2][1]),this.Dir=s(-this.matrView.m[0][2],-this.matrView.m[1][2],-this.matrView.m[2][2]),this.Loc=t,this.At=i,this.MatrVP=this.matrView.mul(this.MatrProj),this}setProj(t,s,i){let h,r;this.ProjDist=s,this.ProjFarClip=i,h=r=this.ProjSize=t,this.FrameW>=this.FrameH?h*=this.FrameW/this.FrameH:r*=this.FrameH/this.FrameW,this.Wp=h,this.Hp=r,this.MatrProj=m.matrFrustum(-h/2,h/2,-r/2,r/2,this.ProjDist,this.ProjFarClip),this.MatrVP=this.matrView.mul(this.MatrProj)}setSize(t,s){this.FrameW=t,this.FrameH=s,this.setProj(this.ProjSize,this.ProjDist,this.ProjFarClip)}}function a(){const t=()=>{const t=new Date;return t.getMilliseconds()/1e3+t.getSeconds()+60*t.getMinutes()};return this.response=(s=null)=>{let i=t();this.globalTime=i,this.globalDeltaTime=i-this.oldTime,this.isPause?(this.localDeltaTime=0,this.pauseTime+=i-this.oldTime):(this.localDeltaTime=this.globalDeltaTime,this.localTime=i-this.pauseTime-this.startTime),this.frameCounter++,i-this.oldTimeFPS>3&&(this.FPS=this.frameCounter/(i-this.oldTimeFPS),this.oldTimeFPS=i,this.frameCounter=0,null!=s&&(document.getElementById(s).innerHTML=this.getFPS())),this.oldTime=i},this.getFPS=()=>{this.FPS.toFixed(3)},this.globalTime=this.localTime=t(),this.globalDeltaTime=this.localDeltaTime=0,this.startTime=this.oldTime=this.oldTimeFPS=this.globalTime,this.frameCounter=0,this.isPause=!1,this.FPS=30,this.pauseTime=0,this}class o{async _init(t,s){this.name=t,this.id=null,this.shaders=[{id:null,type:s.gl.VERTEX_SHADER,name:"vert",src:""},{id:null,type:s.gl.FRAGMENT_SHADER,name:"frag",src:""}];for(const s of this.shaders){let i=await fetch(`bin/shaders/${t}/${s.name}.glsl`),h=await i.text();"string"==typeof h&&""!=h&&(s.src=h)}this.updateShadersSource(s)}updateShadersSource(t){if(this.shaders[0].id=null,this.shaders[1].id=null,this.id=null,""!=this.shaders[0].src&&""!=this.shaders[1].src){if(this.shaders.forEach((s=>{if(s.id=t.gl.createShader(s.type),t.gl.shaderSource(s.id,s.src),t.gl.compileShader(s.id),!t.gl.getShaderParameter(s.id,t.gl.COMPILE_STATUS)){let i=t.gl.getShaderInfoLog(s.id);console.log(`Shader ${this.name}/${s.name} compile fail: ${i}`)}})),this.id=t.gl.createProgram(),this.shaders.forEach((s=>{null!=s.id&&t.gl.attachShader(this.id,s.id)})),t.gl.linkProgram(this.id),!t.gl.getProgramParameter(this.id,t.gl.LINK_STATUS)){let s=t.gl.getProgramInfoLog(this.id);console.log(`Shader program ${this.name} link fail: ${s}`)}this.updateShaderData(t)}}updateShaderData(t){t.shd.posLoc=t.gl.getAttribLocation(t.shd.id,"InPosition"),t.shd.posN=t.gl.getAttribLocation(t.shd.id,"InNormal"),t.shd.timeLoc=t.gl.getUniformLocation(t.shd.id,"Time"),t.shd.mouseLoc=t.gl.getUniformLocation(t.shd.id,"Mouse"),t.shd.camDirLoc=t.gl.getUniformLocation(t.shd.id,"CamDir"),t.shd.worldLoc=t.gl.getUniformLocation(t.shd.id,"World"),t.shd.VPLoc=t.gl.getUniformLocation(t.shd.id,"VP")}constructor(t,s){this._init(t,s)}apply(t){null!=t.shd.id&&t.gl.useProgram(t.shd.id)}}class n{pos=s();n=s()}function l(...t){return new n(...t)}class d{type;trans=m();constructor(t,i,h){this.numOfElements=0;let m=[],r=0;!function(t,i){let h;for(h=0;h<t.length;h++)t[h].n=s(0);for(h=0;h<i.length;h+=3){let s=i[h],m=i[h+1],r=i[h+2],e=t[s].pos,a=t[m].pos,o=t[r].pos,n=a.sub(e).cross(o.sub(e)).normalize();t[s].n=t[s].n.add(n),t[m].n=t[m].n.add(n),t[r].n=t[r].n.add(n)}for(h=0;h<t.length;h++)t[h].n=t[h].n.normalize()}(t,i);for(let s of t)m[r++]=s.pos.x,m[r++]=s.pos.y,m[r++]=s.pos.z,m[r++]=s.n.x,m[r++]=s.n.y,m[r++]=s.n.z;this.vertexArray=h.gl.createVertexArray(),h.gl.bindVertexArray(this.vertexArray),this.vertexBufer=h.gl.createBuffer(),h.gl.bindBuffer(h.gl.ARRAY_BUFFER,this.vertexBufer),h.gl.bufferData(h.gl.ARRAY_BUFFER,new Float32Array(m),h.gl.STATIC_DRAW),-1!=h.shd.posLoc&&(h.gl.vertexAttribPointer(h.shd.posLoc,3,h.gl.FLOAT,!1,24,0),h.gl.enableVertexAttribArray(h.shd.posLoc)),-1!=h.shd.posN&&(h.gl.vertexAttribPointer(h.shd.posN,3,h.gl.FLOAT,!1,24,12),h.gl.enableVertexAttribArray(h.shd.posN)),this.indexArray=h.gl.createBuffer(),h.gl.bindBuffer(h.gl.ELEMENT_ARRAY_BUFFER,this.indexArray),h.gl.bufferData(h.gl.ELEMENT_ARRAY_BUFFER,new Float32Array([].concat(...i)),h.gl.STATIC_DRAW),this.numOfElements=i.length,this.rnd=h}draw(t){var s;null==t&&(t=m()),this.world=this.trans.mul(t),-1!=(s=this.rnd).shd.camDirLoc&&s.gl.uniform3f(s.shd.camDirLoc,!1,s.camera.Dir.x,s.camera.Dir.y,s.camera.Dir.z),this.rnd.gl.bindVertexArray(this.vertexArray),this.rnd.gl.bindBuffer(this.rnd.gl.ELEMENT_ARRAY_BUFFER,this.indexArray),-1!=this.rnd.shd.worldLoc&&this.rnd.gl.uniformMatrix4fv(this.rnd.shd.worldLoc,!1,new Float32Array([].concat(...this.world.m))),-1!=this.rnd.shd.VPLoc&&this.rnd.gl.uniformMatrix4fv(this.rnd.shd.VPLoc,!1,new Float32Array([].concat(...this.rnd.camera.MatrVP.m))),this.rnd.gl.drawArrays(this.rnd.gl.TRIANGLES,0,this.numOfElements)}}function u(...t){return new d(...t)}class c{constructor(t,i){let h,r=Math.sqrt(2),e=Math.sqrt(3);this.vert=[];let a=[];for(this.ind=[],h=0;h<4;h++)this.vert[h]=l(),this.vert[h].pos=s(),this.vert[h].n=s();let o=s(0),n=s(-t/2,0,e/2*t),d=s(t/2,0,e/2*t),c=s(0,e*r*t/3,e/3*t);for(h=0;h<12;h++)a[h]=l();for(a[0].pos=n,a[1].pos=o,a[2].pos=d,a[3].pos=c,a[4].pos=n,a[5].pos=d,a[6].pos=c,a[7].pos=o,a[8].pos=n,a[9].pos=c,a[10].pos=d,a[11].pos=o,h=0;h<a.length;h++)this.ind[h]=h;this.primmitive=u(a,this.ind,i),this.primmitive.trans=m.matrTranslate(s(0,-e*r*t/6,-r/3*t))}draw(t){this.primmitive.draw(t)}}class p{constructor(t,i){this.vert=[];let h=[];this.ind=[];let m,r=t/2,e=s(-r,-r,-r),a=s(-r,-r,r),o=s(r,-r,r),n=s(r,-r,-r),d=s(-r,r,-r),c=s(-r,r,r),p=s(r,r,r),g=s(r,r,-r);for(m=0;m<48;m++)h[m]=l();m=0,h[m++].pos=a,h[m++].pos=e,h[m++].pos=o,h[m++].pos=o,h[m++].pos=e,h[m++].pos=n,h[m++].pos=e,h[m++].pos=c,h[m++].pos=d,h[m++].pos=e,h[m++].pos=a,h[m++].pos=c,h[m++].pos=o,h[m++].pos=p,h[m++].pos=c,h[m++].pos=o,h[m++].pos=c,h[m++].pos=a,h[m++].pos=o,h[m++].pos=n,h[m++].pos=p,h[m++].pos=n,h[m++].pos=g,h[m++].pos=p,h[m++].pos=e,h[m++].pos=d,h[m++].pos=g,h[m++].pos=e,h[m++].pos=g,h[m++].pos=n,h[m++].pos=d,h[m++].pos=c,h[m++].pos=p,h[m++].pos=d,h[m++].pos=p,h[m++].pos=g;for(let t=0;t<m;t++)this.ind[t]=t;this.primmitive=u(h,this.ind,i)}draw(t){this.primmitive.draw(t)}}function g(...t){return new p(...t)}const x=[];x.push({name:"Black Plastic",Ka:s(0,0,0),Kd:s(.01,.01,.01),Ks:s(.5,.5,.5),Ph:32}),x.push({name:"Brass",Ka:s(.329412,.223529,.027451),Kd:s(.780392,.568627,.113725),Ks:s(.992157,.941176,.807843),Ph:27.8974}),x.push({name:"Bronze",Ka:s(.2125,.1275,.054),Kd:s(.714,.4284,.18144),Ks:s(.393548,.271906,.166721),Ph:25.6}),x.push({name:"Chrome",Ka:s(.25,.25,.25),Kd:s(.4,.4,.4),Ks:s(.774597,.774597,.774597),Ph:76.8}),x.push({name:"Copper",Ka:s(.19125,.0735,.0225),Kd:s(.7038,.27048,.0828),Ks:s(.256777,.137622,.086014),Ph:12.8}),x.push({name:"Gold",Ka:s(.24725,.1995,.0745),Kd:s(.75164,.60648,.22648),Ks:s(.628281,.555802,.366065),Ph:51.2}),x.push({name:"Peweter",Ka:s(.10588,.058824,.113725),Kd:s(.427451,.470588,.541176),Ks:s(.3333,.3333,.521569),Ph:9.84615}),x.push({name:"Silver",Ka:s(.19225,.19225,.19225),Kd:s(.50754,.50754,.50754),Ks:s(.508273,.508273,.508273),Ph:51.2}),x.push({name:"Polished Silver",Ka:s(.23125,.23125,.23125),Kd:s(.2775,.2775,.2775),Ks:s(.773911,.773911,.773911),Ph:89.6}),x.push({name:"Turquoise",Ka:s(.1,.18725,.1745),Kd:s(.396,.74151,.69102),Ks:s(.297254,.30829,.306678),Ph:12.8}),x.push({name:"Ruby",Ka:s(.1745,.01175,.01175),Kd:s(.61424,.04136,.04136),Ks:s(.727811,.626959,.626959),Ph:76.8}),x.push({name:"Polished Gold",Ka:s(.24725,.2245,.0645),Kd:s(.34615,.3143,.0903),Ks:s(.797357,.723991,.208006),Ph:83.2}),x.push({name:"Polished Bronze",Ka:s(.25,.148,.06475),Kd:s(.4,.2368,.1036),Ks:s(.774597,.458561,.200621),Ph:76.8}),x.push({name:"Polished Copper",Ka:s(.2295,.08825,.0275),Kd:s(.5508,.2118,.066),Ks:s(.580594,.223257,.0695701),Ph:51.2}),x.push({name:"Jade",Ka:s(.135,.2225,.1575),Kd:s(.135,.2225,.1575),Ks:s(.316228,.316228,.316228),Ph:12.8}),x.push({name:"Obsidian",Ka:s(.05375,.05,.06625),Kd:s(.18275,.17,.22525),Ks:s(.332741,.328634,.346435),Ph:38.4}),x.push({name:"Pearl",Ka:s(.25,.20725,.20725),Kd:s(1,.829,.829),Ks:s(.296648,.296648,.296648),Ph:11.264}),x.push({name:"Emerald",Ka:s(.0215,.1745,.0215),Kd:s(.07568,.61424,.07568),Ks:s(.633,.727811,.633),Ph:76.8}),x.push({name:"Black Rubber",Ka:s(.02,.02,.02),Kd:s(.01,.01,.01),Ks:s(.4,.4,.4),Ph:10});const f=s(0,1,0),y=s(1,3,2);class P{constructor(t){if(this.canvas=document.querySelector("#"+t),this.gl=this.canvas.getContext("webgl2"),this.gl.enable(this.gl.DEPTH_TEST),null==this.gl)return alert("WebGL2 not supported"),null;this.gl.clearColor(.3,.47,.8,1),this.gl.clear(this.gl.COLOR_BUFFER_BIT),this.shd=function(t,s){return new o(t,s)}("def",this),this.flag=!1,this.camera=function(...t){return new e(...t)}(),this.camera.set(y,s(0),f),this.camera.setProj(.1,.1,300),this.camera.setSize(300,300),this.timer=new a}render(t,s){const i=()=>{var h;this.gl.clearColor(.3,.47,.8,1),this.flag?(this.shd.apply(this),this.timer.response(),(h=this).gl.clear(h.gl.COLOR_BUFFER_BIT),-1!=h.shd.camDirLoc&&h.gl.uniform3f(h.shd.camDirLoc,!1,h.camera.Dir.x,h.camera.Dir.y,h.camera.z),s()):null!=this.shd.id&&(this.shd.apply(this),this.shd.updateShaderData(this),t(),this.prg=this.shd.id,this.flag=!0),window.requestAnimationFrame(i)};i()}}function A(...t){return new P(...t)}window.addEventListener("load",(()=>{m.matrTranslate(s(0));let t=A("glCanvas1"),i=A("glCanvas2");t.prim=g(1,t),t.render((()=>{t.tetr=function(...t){return new c(...t)}(1,t)}),(()=>{t.tetr.draw(m.matrRotateX(30*i.timer.localTime).mul(m.matrRotateY(45*i.timer.localTime)))})),i.render((()=>{i.cube=g(1,i)}),(()=>{i.cube.draw(m.matrRotateX(30*i.timer.localTime).mul(m.matrRotateY(45*i.timer.localTime)))}))})),console.log(x);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
