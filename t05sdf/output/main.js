!function(){"use strict";let t,e,a,n,d,h;function i(t){return URL.createObjectURL(t)}async function g(t){e=document.getElementById("myCanvas2"),d=e.getContext("2d");let n=document.createElement("img"),g=i(t);const l=await fetch(g),o=await l.blob();await new Promise((t=>{n.onload=()=>{d.drawImage(n,0,0,e.width,e.height),t();let i=d.getImageData(0,0,e.width,e.height);for(let t=0;t<e.height;t++)for(let a=0;a<e.width;a++){let n=4*(t*e.width+a),d=255*((i.data[n]+i.data[n+1]+i.data[n+2])/3>126);i.data[n]=d,i.data[n+1]=d,i.data[n+2]=d}d.putImageData(i,0,0),function(){a=document.getElementById("myCanvas3"),h=a.getContext("2d");let t=document.getElementById("myCanvas4").getContext("2d"),n=d.getImageData(0,0,e.width,e.height);h.putImageData(n,0,0);let i=h.getImageData(0,0,a.width,a.height);for(let t=0;t<a.height;t++){let e,n,d,h=[],g=[];for(e=0;e<a.width;e++){let n=4*(t*a.width+e);255!=i.data[n]&&h.push(e)}for(d=0;d<h.length-1;d++)if(n=(h[d]*h[d]-h[d+1]*h[d+1])/2/(h[d]-h[d+1]),g.length>0&&n<g[g.length])for(e=d;e<h.length-1;e++)h[e]=h[e+1];else g.push(n);if(d=0,0!=g.length)for(e=0;e<a.width;e++){for(;e>=g[d]&&d<g.length;)d++;let n=4*(t*a.width+e),l=(h[d]-e)*(h[d]-e);i.data[n]=l,i.data[n+1]=l,i.data[n+2]=l}}h.putImageData(i,0,0);for(let t=0;t<a.width;t++){let e,n,d,h=[],g=[];for(e=0;e<a.height;e++){let n=4*(e*a.width+t);255!=i.data[n]&&h.push(e)}for(d=0;d<h.length-1;d++)if(n=(h[d]*h[d]-h[d+1]*h[d+1])/2/(h[d]-h[d+1]),g.length>0&&n<g[g.length])for(e=d;e<h.length-1;e++)h[e]=h[e+1];else g.push(n);if(d=0,0!=g.length)for(e=0;e<a.height;e++){for(;e>=g[d]&&d<g.length;)d++;let n=4*(e*a.width+t),l=(h[d]-e)*(h[d]-e);i.data[n]=l,i.data[n+1]=l,i.data[n+2]=l}}t.putImageData(i,0,0)}()},n.src=URL.createObjectURL(o)}))}window.addEventListener("load",(()=>{const e=document.getElementById("imgInput");e.addEventListener("change",(async()=>{const a=e.files[0];(async function(e){t=document.getElementById("myCanvas"),n=t.getContext("2d");let a=document.createElement("img"),d=i(e);const h=await fetch(d),g=await h.blob();await new Promise((e=>{a.onload=()=>{n.drawImage(a,0,0,t.width,t.height),e()},a.src=URL.createObjectURL(g)}))})(a).then(g(a))}))}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
